<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>netlify on #a5ebec</title>
    <link>https://blog.5ebec.dev/tags/netlify/</link>
    <description>Recent content in netlify on #a5ebec</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 07 Dec 2019 09:48:32 +0000</lastBuildDate>
    
	<atom:link href="https://blog.5ebec.dev/tags/netlify/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Netlify &#43;  GitHub Actions で Hugo 製ブログの予約投稿</title>
      <link>https://blog.5ebec.dev/posts/netlify-github-actions-%E3%81%A7-hugo-%E8%A3%BD%E3%83%96%E3%83%AD%E3%82%B0%E3%81%AE%E4%BA%88%E7%B4%84%E6%8A%95%E7%A8%BF/</link>
      <pubDate>Sat, 07 Dec 2019 09:48:32 +0000</pubDate>
      
      <guid>https://blog.5ebec.dev/posts/netlify-github-actions-%E3%81%A7-hugo-%E8%A3%BD%E3%83%96%E3%83%AD%E3%82%B0%E3%81%AE%E4%BA%88%E7%B4%84%E6%8A%95%E7%A8%BF/</guid>
      <description>モチベーション Hugoは静的サイトジェネレータであり，予約投稿というものが無い．これでは「アドベントカレンダーで0時に公開したい」などという時に困るので，どうにかして予約投稿を実現したい．
tl;dr Hugo製ブログをNetlifyでホスティングしている前提．
NetlifyのBuild hooksとGitHub Actionsのscheduleを用いる．
NetlifyのBuild hooks buildとdeployをトリガーする為のURL．
ダッシュボードの Settings &amp;gt; Build &amp;amp; deploy &amp;gt; Continuous Deployment &amp;gt; Build hooks にある． Add build hookからBuild Hooks URLを作成する．nameは参照用で，Build hooksのリストとdeploy時のメッセージに表示される．
branchはmasterにする．   生成されたURLを用いて，端末で以下のようなcurlコマンドを叩くと，Netlifyでbuildとdeployが実行される．
curl -X POST -d &amp;#39;{}&amp;#39; https://api.netlify.com/build_hooks/XXXXXXXXXXXXXXX GitHub Actionsのschedule 別に他のCIサービスを用いても良いのだが，自分はTravis CIしか使ったことがなかったのと，Travis CIのCron Jobsではdailyが最短なので却下．
そういえばGitHub Actionsなんてものがあったなぁと思って触ってみた．
GitHub Actionsではリポジトリの~/.github/workflows以下にYAML構文でワークフローを定義する．
ワークフローの書き方は Workflow syntax for GitHub Actions を参考にされたい．
今回は「毎時0分にbuild &amp;amp; deployを実行」させてみる．
schedule.yaml
name: scheduler on: schedule: - cron: &amp;#39;0 * * * *&amp;#39; jobs: build: runs-on: ubuntu-latest steps: - name: Post build hooks run: curl -X POST -d {} ${{ secrets.</description>
    </item>
    
    <item>
      <title>GitHub Pages &#43; Netlify DNS でカスタムドメイン</title>
      <link>https://blog.5ebec.dev/posts/github-pages-netlify-managed-dns-%E3%81%A7%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3/</link>
      <pubDate>Sun, 09 Jun 2019 21:37:05 +0000</pubDate>
      
      <guid>https://blog.5ebec.dev/posts/github-pages-netlify-managed-dns-%E3%81%A7%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3/</guid>
      <description>これの続き
前回、カスタムネームサーバーを使用してDNSをNetlifyに移したのでGoogle DomainsのDNSからはカスタムリソースレコードの設定はできない
NetlifyのDomainsタブを開く
DNS settingsのAdd new recordで
Record type: ALIAS
Name: @
Value: USERNAME.github.io
として、Saveする
GitHub Pagesのレポジトリのページから Setting &amp;gt; Options &amp;gt; GitHub Pages &amp;gt; Custom domain にカスタムドメインを書いてSave
完成</description>
    </item>
    
    <item>
      <title>Netlify でさくっとカスタムドメイン</title>
      <link>https://blog.5ebec.dev/posts/netlify%E3%81%A7%E3%81%95%E3%81%8F%E3%81%A3%E3%81%A8%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3/</link>
      <pubDate>Sun, 09 Jun 2019 20:15:54 +0000</pubDate>
      
      <guid>https://blog.5ebec.dev/posts/netlify%E3%81%A7%E3%81%95%E3%81%8F%E3%81%A3%E3%81%A8%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3/</guid>
      <description>カスタムドメインの購入 Google Domainsで流行りの.devドメインを購入
日本語対応してるので簡単
 Google Domains のサービスは、現在お住まいの国で営利目的または商用で使用する場合にのみご利用いただけます。
 って書かれてたんだけど、皆んな個人利用で使ってるし、そもそも.devって開発者向けのドメインだから別にいいよね（？）
ちなみに Kyashで買えた　嬉しい
Netlifyにカスタムドメインを設定 このページで設定する
Add custom domain からお好きなカスタムドメインを追加
画像のようにblog等のサブドメインも可能
Check DNS configration という警告が出るのでそれをクリックして出てきたメッセージに従う
(ググってよく出てくるのはカスタムリソースレコードのCNAMEの設定だが、そんなことをしなくてもカスタムネームサーバーを使用すればNetlifyのManaged DNSが勝手に設定してくれる)
Netlifyに提示されたネームサーバーをGoogle DomainsのDNS &amp;gt; ネームサーバー に追加する
HTTPS化 自動的に設定される
Verify DNS configurationを押したらすぐ有効化された
さくっとできた</description>
    </item>
    
  </channel>
</rss>